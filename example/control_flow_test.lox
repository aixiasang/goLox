// 控制流测试案例 - 修订版

// ===== if语句测试 =====
var a = 1;
var b = 5;

// 基本if语句
if (a > 0) {
  print "a是正数";
}

// if-else语句
if (a > 2) {
  print "a大于2";
} else {
  print "a不大于2";
}

// 条件表达式
if (a >= 1 and a <= 9) {
  print "a在1到9之间";
}

// ===== 逻辑运算符测试 =====
// and运算符
if (a > 0 and b > 0) {
  print "a和b都是正数";
}

// or运算符
if (a > 100 or b > 0) {
  print "a大于100或b是正数";
}

// 复杂逻辑组合
if ((a > 0 and b > 0) or (a < 0 and b < 0)) {
  print "复杂条件为真";
}

// ===== while循环测试 =====
var i = 1;
while (i <= 5) {
  print i;
  i = i + 1;
}

// 嵌套循环
var i = 1;
while (i <= 3) {
  var j = 1;
  while (j <= 2) {
    print "i=" + i + ", j=" + j;
    j = j + 1;
  }
  i = i + 1;
}

// 条件控制
i = 1;
while (i <= 10) {
  if (i % 2 == 0) {
    print i + "是偶数";
  } else {
    print i + "是奇数";
  }
  i = i + 1;
}

// ===== for循环测试 =====
// 标准for循环
for (var i = 1; i <= 5; i = i + 1) {
  print "for循环: " + i;
}

// 无初始化表达式的for循环
var i = 1;
for (; i <= 3; i = i + 1) {
  print "无初始化for: " + i;
}

// 无更新表达式的for循环
for (var i = 1; i <= 3;) {
  print "无更新部分for: " + i;
  i = i + 1;
}

// 只有条件表达式的for循环
var i = 1;
for (; i <= 3;) {
  print "条件循环: " + i;
  i = i + 1;
}

// ===== 实用示例 =====
// 斐波那契数列
print "斐波那契数列:";
var a = 0;
var b = 1;
print a;
print b;
for (var i = 0; i < 5; i = i + 1) {
  var c = a + b;
  print c;
  a = b;
  b = c;
}

// 寻找素数
print "1-10中的素数:";
for (var n = 2; n <= 10; n = n + 1) {
  var isPrime = true;
  
  for (var divisor = 2; divisor < n; divisor = divisor + 1) {
    if (n % divisor == 0) {
      isPrime = false;
    }
  }
  
  if (isPrime) {
    print n;
  }
}
